/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
    behaviors {
        spc_undsc: spc_undsc {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_UNDERSCORE";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp UNDER>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ----------------------------------------------------------------------------------                ----------------------------------------------------------------------------------
// |   ESC   |    Q    |    W    |    E    |    R    |    T    |                                                          |    Y    |    U    |    I    |    O    |    P    |    \    |
// |   TAB   |    A    |    S    |    D    |    F    |    G    |                                                          |    H    |    J    |    K    |    L    |    ;    |    '    |
// |  SHIFT  |    Z    |    X    |    C    |    V    |    B    | CTRL+A  | CTRL+C  |                  |  CTRL+V |  CTRL+X |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
//                               |   GUI   |   DEL   | RETURN  |  SPACE  | ESCAPE  |                  |  RETURN |  SPACE  |   TAB   |   BSPC  |  R ALT  |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E      &kp R     &kp T                                                                            &kp Y    &kp U     &kp I      &kp O    &kp P     &kp BSLH
&kp ESC     &kp A  &kp S  &kp D      &kp F     &kp G                                                                            &kp H    &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C      &kp V     &kp B     &mo 2           &trans                           &kp LC(V)  &mo 1      &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                          &kp LCTRL  &kp LALT  &kp LGUI  &kp LEFT_SHIFT  &kp ESC                          &kp RET    &spc_undsc  &kp BSPC &kp RIGHT_SHIFT &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_1 {
            bindings = <
&trans  &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS                                                   &kp GRAVE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AMPERSAND    &kp EQUAL  &kp HASH
&trans  &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS                                                  &kp MINUS     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT     &trans
&trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOLLAR &mo 3   &trans                  &trans  &trans  &kp ASTERISK  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT      &kp TILDE  &trans
                                    &trans        &trans        &trans     &trans  &trans                  &trans  &trans  &trans        &trans                &trans
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp 0 0>;
        };
        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                                                        &kp LG(LS(TAB))  &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)  &kp LG(TAB)  &trans  &trans
&trans  &trans  &trans  &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)  &trans                                               &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans  &mo 3   &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans                                            &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&sys_reset  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3     &bt BT_SEL 4                                                          &trans  &trans  &trans  &trans  &trans  &sys_reset
&bt BT_CLR  &trans          &trans        &bt BT_PRV     &bt BT_NXT       &trans                                                                &trans  &trans  &trans  &trans  &trans  &trans
&bootloader  &trans     &trans        &trans         &trans           &trans  &trans  &trans                                   &trans  &trans   &trans  &trans  &trans  &trans  &trans  &bootloader
                                      &trans         &trans           &trans  &trans  &trans                                   &trans  &trans   &trans  &trans  &trans
            >;
        };

        fn_layer {
            bindings = <
&trans  &kp ASTERISK  &kp F7  &kp F8  &kp F9  &kp PLUS                                                   &kp GRAVE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AMPERSAND    &kp EQUAL  &kp HASH
&trans  &kp SLASH     &kp F4  &kp F5  &kp F6  &kp MINUS                                                  &kp MINUS     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT     &trans
&trans  &kp NUMBER_0  &kp F1  &kp F2  &kp F3  &kp DOLLAR &mo 3   &trans                  &trans  &trans  &kp ASTERISK  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT      &kp TILDE  &trans
                                    &trans        &trans        &trans     &trans  &trans                  &trans  &trans  &trans        &trans                &trans
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp 0 0>;
        };
    };
};
